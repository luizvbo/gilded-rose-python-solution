# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_stages: [commit, manual]

repos:
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v2.2.3
      hooks:
          - id: trailing-whitespace
          - id: end-of-file-fixer
          - id: check-case-conflict # Check for files that would conflict in case-insensitive filesystems
          - id: check-merge-conflict # Check for files that contain merge conflict strings.
          - id: debug-statements # Check for debugger imports and py37+ `breakpoint()` calls in python source.
          - id: requirements-txt-fixer # Sorts entries in requirements.txt
          - id: flake8
            args:
            - "--max-line-length=88"
            - "--max-complexity=18"
            - "--max-complexity=18"
            - "--select=B,C,E,F,W,T4,B9"
            - "--ignore=E203,E266,E501,W503"

    - repo: https://github.com/pre-commit/mirrors-mypy
      rev: v0.961
      hooks:
          - id: mypy
            args: [--allow-redefinition, --ignore-missing-imports]
            additional_dependencies:
            - types-cachetools
            - types-filelock
            - types-PyYAML
            - types-redis
            - types-requests
            - types-setuptools
            - types-toml
            - attrs

    - repo: https://github.com/asottile/blacken-docs
      rev: v1.12.1
      hooks:
          - id: blacken-docs
            additional_dependencies: [black~=22.0]
            entry: blacken-docs --skip-errors

    - repo: https://github.com/asottile/pyupgrade
      rev: v2.26.0
      hooks:
          - id: pyupgrade
            args: [--py36-plus]

    - repo: local
      hooks:
          - id: isort
            name: "Sort imports"
            language: system
            types: [file, python]
            entry: isort
          - id: black
            name: "Black"
            language: system
            files: ^gilded_rose_app/|^tests/
            types: [file, python]
            entry: black

          # The first set of pylint checks if for local pre-commit, it only runs on the files changed.
          - id: pylint-quick-gilded_rose_app
            name: "Quick Pylint on gilded_rose_app/*"
            language: system
            types: [file, python]
            files: ^gilded_rose_app/
            entry: pylint -j 4 --disable=unnecessary-pass
            stages: [commit]
          - id: pylint-quick-tests
            name: "Quick Pylint on tests/*"
            language: system
            types: [file, python]
            files: ^tests/
            entry: pylint -j 4 --disable=missing-docstring,redefined-outer-name,no-self-use,invalid-name,protected-access,too-many-arguments,too-many-public-methods
            stages: [commit]

          # The same pylint checks, but running on all files. It's for manual run with `make lint`
          - id: pylint-gilded_rose_app
            name: "Pylint on gilded_rose_app/*"
            language: system
            pass_filenames: false
            stages: [manual]
            entry: pylint -j 4 --disable=unnecessary-pass --init-hook="import sys; sys.setrecursionlimit(2000)" gilded_rose_app
          - id: pylint-tests
            name: "Pylint on tests/*"
            language: system
            pass_filenames: false
            stages: [manual]
            entry: pylint -j 4 --disable=missing-docstring,redefined-outer-name,no-self-use,invalid-name,protected-access,too-many-arguments,too-many-public-methods,use-implicit-booleaness-not-comparison tests
